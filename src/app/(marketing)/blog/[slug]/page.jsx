//"use client";
// este enuncido indica a la aplicacion que la presente pagina se ejecuta desde el lado del cliente, con ello el useRouter se puede utilizar
// de preferencia colocar el enunciado al principio de la pagina
// se suele colocar en componentes

// el metada solo funciona en componentes del servidor
// la razon es por el use client que indica que esta pagina es componente del cliente

// cuando tenemos parametros dinámicos
// se debe utilizar componentes del servidor

/* export const metadata = {
    title: "Blog articulo uno",
    description: "Shop - Generated by create next app",
}; */

// generateMetadata funcion que permite capturar los parámetros y generar el metadata de forma dinámica

// fuera del componente principal utilizar la funcion generateMetadata

/* export function generateMetadata({ params }) {
    return {
        title: `Blog ${params.slug}`,
        description: "Blog - Generated by create next app",
    };
} */

// uso correcto generateMetadata

// se recomienda uso de async
// export async function generateMetadata({ params }) {

export function generateMetadata({ params }) {
    const post = POST.find((post) => post.slug === params.slug);
    return {
        title: post.title,
        description: post.title + " Blog - Generated by create next app",
    };
}

import TitlePage from "@/components/pagesComponents/TitlePage";
import { POST } from "../page";
//import { useRouter } from "next/navigation"; // atención a la importación de useRouter
// viene del paquete next/navigation y no de next/router
import Link from "next/link";

const Slug = ({ params }) => {
    //console.log(params);
    const post = POST.find((post) => post.slug === params.slug);
    /* const router = useRouter();

    const handleClickBack = () => {
        //router.back();
        // alternativa
        router.push("/blog"); // se usa para ser redireccionado a una ruta específica del sitio web
    }; */

    return (
        <>
            <TitlePage title={post.title} />
            <p className="mb-5 text-center">{post.content}</p>{" "}
            {/* // soft navigation, no hay spinner de carga */}
            <div className="text-center">
                {/* mantenemos navegación del cliente con Link
                y el componente sigue siendo del servidor */}
                <Link
                    href="/blog"
                    className="rounded bg-indigo-500 px-4 py-2 font-bold text-white hover:bg-indigo-700"
                >
                    Volver
                </Link>
                {/* <button
                    className="rounded bg-indigo-500 px-4 py-2 font-bold text-white hover:bg-indigo-700"
                    onClick={handleClickBack}
                >
                    Volver
                </button> */}
            </div>
        </>
    );
};

export default Slug;
